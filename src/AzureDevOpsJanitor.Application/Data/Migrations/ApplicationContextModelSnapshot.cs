// <auto-generated />
using System;
using AzureDevOpsJanitor.Application.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AzureDevOpsJanitor.Application.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("ArtifactReleaseRoot", b =>
                {
                    b.Property<int>("ArtifactsId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ArtifactsName")
                        .HasColumnType("TEXT");

                    b.HasKey("ArtifactsId", "ArtifactsName");

                    b.HasIndex("ArtifactsName");

                    b.ToTable("ArtifactReleaseRoot");
                });

            modelBuilder.Entity("AzureDevOpsJanitor.Domain.Aggregates.Build.BuildRoot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CapabilityIdentifier")
                        .HasColumnType("TEXT");

                    b.Property<string>("DefinitionName")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("TEXT");

                    b.Property<int>("StatusId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DefinitionName");

                    b.HasIndex("StatusId");

                    b.ToTable("Build");
                });

            modelBuilder.Entity("AzureDevOpsJanitor.Domain.Aggregates.Build.BuildStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("BuildStatus");
                });

            modelBuilder.Entity("AzureDevOpsJanitor.Domain.Aggregates.Project.ProjectRoot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("AzureDevOpsJanitor.Domain.Aggregates.Release.ReleaseRoot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Release");
                });

            modelBuilder.Entity("AzureDevOpsJanitor.Domain.ValueObjects.Artifact", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.ToTable("Artifact");
                });

            modelBuilder.Entity("AzureDevOpsJanitor.Domain.ValueObjects.BuildDefinition", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Yaml")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.ToTable("BuildDefinition");
                });

            modelBuilder.Entity("AzureDevOpsJanitor.Domain.ValueObjects.BuildEnvironment", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.ToTable("Environment");
                });

            modelBuilder.Entity("BuildEnvironmentReleaseRoot", b =>
                {
                    b.Property<int>("EnvironmentsId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EnvironmentsName")
                        .HasColumnType("TEXT");

                    b.HasKey("EnvironmentsId", "EnvironmentsName");

                    b.HasIndex("EnvironmentsName");

                    b.ToTable("BuildEnvironmentReleaseRoot");
                });

            modelBuilder.Entity("ArtifactReleaseRoot", b =>
                {
                    b.HasOne("AzureDevOpsJanitor.Domain.Aggregates.Release.ReleaseRoot", null)
                        .WithMany()
                        .HasForeignKey("ArtifactsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AzureDevOpsJanitor.Domain.ValueObjects.Artifact", null)
                        .WithMany()
                        .HasForeignKey("ArtifactsName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AzureDevOpsJanitor.Domain.Aggregates.Build.BuildRoot", b =>
                {
                    b.HasOne("AzureDevOpsJanitor.Domain.ValueObjects.BuildDefinition", "Definition")
                        .WithMany()
                        .HasForeignKey("DefinitionName");

                    b.HasOne("AzureDevOpsJanitor.Domain.Aggregates.Build.BuildStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("AzureDevOpsJanitor.Domain.ValueObjects.Tag", "Tags", b1 =>
                        {
                            b1.Property<int>("BuildRootId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("BuildRootId", "Id");

                            b1.ToTable("Tag");

                            b1.WithOwner()
                                .HasForeignKey("BuildRootId");
                        });

                    b.Navigation("Definition");

                    b.Navigation("Status");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("BuildEnvironmentReleaseRoot", b =>
                {
                    b.HasOne("AzureDevOpsJanitor.Domain.Aggregates.Release.ReleaseRoot", null)
                        .WithMany()
                        .HasForeignKey("EnvironmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AzureDevOpsJanitor.Domain.ValueObjects.BuildEnvironment", null)
                        .WithMany()
                        .HasForeignKey("EnvironmentsName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
